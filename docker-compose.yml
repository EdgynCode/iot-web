services:
  frontend:
    # container_name: frontend
    image: phongngolam/iot-web-frontend
    # build: 
    #  context: ./
    #  dockerfile: frontend.dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://10.0.0.170:8080/api/
    networks:
      - productnetwork
    depends_on:
      - webapi
  webapi:
    # build: 
    #   context: ./
    #   dockerfile: backend.dockerfile
    image: counterlogic/iot-back-end-stable
    ports:
      - "8080:8080"   # HTTP
      - "8081:8081"  # HTTPS
    depends_on:
      - sqlserver
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=${CONNECTION_STRING}
    networks:
      - productnetwork
    restart: on-failure
  sqlserver:
    container_name: sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: ${ACCEPT_EULA} 
      MSSQL_PID: ${MSSQL_PID}
    ports:
      - "${MSSQL_TCP_PORT}:${MSSQL_TCP_PORT}"
    volumes:
      - sql_data_volume:/var/opt/mssql
    # restart: always
    networks:
      - productnetwork
  mqtt:
    container_name: broker
    image: eclipse-mosquitto
    ports:
      - "1883:1883"
    volumes:
    - ./mosquitto/config:/mosquitto/config
    networks:
      - productnetwork
  mqttbridge:
    container_name: mqtt-bridge-service
    image: counterlogic/mqtt-bridge-service
    ports:
      - "5000:500"
      - "5001:500"
    environment:
      - ASPNETCORE_HTTP_PORTS=500
    depends_on:
      - mqtt
    networks:
      - productnetwork

networks:
  productnetwork:
    driver: bridge
volumes:
  sql_data_volume: